version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: backend
    container_name: the-cycle-backend
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - PORT=8080
      - REDIS_HOST=${REDIS_HOST:-thecycle.redis.cache.windows.net}
      - REDIS_PORT=${REDIS_PORT:-6380}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_TLS=${REDIS_TLS:-true}
      - FRONTEND_URL=http://localhost:3001
    volumes:
      - backend_logs:/app/logs
    restart: unless-stopped
    networks:
      - the-cycle-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8080/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # React Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: frontend
    container_name: the-cycle-frontend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://backend:8080/api
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - the-cycle-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: the-cycle-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - the-cycle-network
    profiles:
      - production

volumes:
  backend_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  the-cycle-network:
    driver: bridge
    name: the-cycle-network
